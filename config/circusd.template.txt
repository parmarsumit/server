[circus]
httpd = False
httpd_host = 127.0.0.1
httpd_port = 8080
statsd = False
check_delay = 5
pidfile = /tmp/circus-ilot.pid
endpoint = ipc:///tmp/circus-endpoint-ilot
pubsub_endpoint = ipc:///tmp/circus-pubsub-ilot
stats_endpoint = ipc:///tmp/circus-stats-ilot
logoutput = {{container_path}}/logs/circus.ilot.log

{% for service in services %}
{% for process in service.get_configured_processes %}
[watcher:{{service.id}}-{{process.port}}]
cmd = ilot serve --ip=127.0.0.1 --port={{process.port}}
numprocesses = 1
use_sockets = False
copy_env = True
working_dir = {{service.path}}
virtualenv = {{container_path}}/env
stop_children = True
graceful_timeout = 30
priority = 999
singleton = True
use_sockets = False

max_age = 36000
max_age_variance = 3600

# will push in test.log the stream every 300 ms
stdout_stream.class = FileStream
stdout_stream.filename = {{container_path}}/logs/ilot.access.{{service.interface.cname}}.log
stderr_stream.class = FileStream
stderr_stream.filename = {{container_path}}/logs/ilot.error.{{service.interface.cname}}.log

# optionally rotate the log file when it reaches 1 gb
# and save 5 copied of rotated files
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 5
stderr_stream.max_bytes = 1073741824
stderr_stream.backup_count = 5

[env:{{service.id}}-{{process.port}}]
DJANGO_ENV = production
DJANGO_SETTINGS_MODULE=ilot.settings
CERT_FILE={{container_path}}/conf/certificate.{{service.id}}.pem
KEY_FILE={{container_path}}/conf/key.{{service.id}}.pem
{% endfor %}
{% endfor %}
