# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-03 16:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import ilot.core.manager
import ilot.core.models
import ilot.rules.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ilot', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(help_text='Action keyword', max_length=36, unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=4096, null=True)),
                ('meta_type', models.CharField(choices=[('item', 'Item'), ('version', 'Version'), ('event', 'Event'), ('request', 'Request'), ('context', 'Context'), ('clone', 'Clone'), ('actor', 'Actor')], default='event', max_length=36)),
                ('authorize', models.BooleanField(default=False, verbose_name='Authorize target')),
                ('behavior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='behaviors', to='rules.Action', verbose_name='Request behavior ')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='actions', to='ilot.Package', verbose_name='Package')),
            ],
            options={
                'ordering': ['package', 'meta_type', 'name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(max_length=36)),
                ('label', models.CharField(blank=True, default='', max_length=36)),
                ('order', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, default='')),
                ('help', models.TextField(blank=True, default='')),
                ('required', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('datatype', models.CharField(choices=[('slug', 'Name (Core unique in children)'), ('title', 'Title (Core)'), ('label', 'Label (Core)'), ('description', 'Description (Core)'), ('start', 'Start Datetime (Core)'), ('end', 'End Datetime (Core)'), ('type', 'Type (Core)'), ('parent', 'Parent Item (Core)'), ('target', 'Target (Core)'), ('image', 'Image (Core)'), ('file', 'File (Core)'), ('string', 'Word'), ('choice', 'Choice'), ('datetime', 'DateTime'), ('number', 'Number'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('email', 'Email'), ('url', 'Url')], default='string', max_length=36)),
                ('default', models.CharField(blank=True, default='', max_length=4096)),
                ('params', models.TextField(blank=True, default='')),
                ('regexp', models.CharField(blank=True, default='', max_length=4096, verbose_name='Validation regexp')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='rules.Action')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(help_text='Common name for the condition', max_length=36)),
                ('condition', models.CharField(choices=[('equals', 'Equals'), ('not-equals', 'Not equals'), ('gt', 'Greater than'), ('lt', 'Lower than'), ('in', 'In'), ('not_in', 'not In')], help_text='Condition for the condition', max_length=36)),
                ('value', models.TextField(blank=True, null=True, verbose_name='or ...')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(help_text='Common name for the property', max_length=36)),
                ('related', models.CharField(choices=[('this', 'This'), ('target', 'Target'), ('origin', 'Origin'), ('actor', 'Actor'), ('related', 'Item')], help_text='Related event or item', max_length=36)),
                ('method', models.CharField(choices=[('list', 'List'), ('total', 'Total'), ('count', 'Count'), ('value', 'Value')], help_text='Method used to get the result', max_length=36)),
                ('attribute', models.ForeignKey(blank=True, help_text='Attribute value of the selected scope type action', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='properties', to='rules.Attribute')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(help_text='Common name for the requirement', max_length=36)),
                ('reference', models.CharField(choices=[('event', 'Event'), ('actor', 'Actor'), ('related', 'Item'), ('context', 'Context')], default='actor', max_length=36, verbose_name='')),
                ('message', models.CharField(help_text='Message for rejected requirement', max_length=512)),
                ('action', models.ForeignKey(help_text='Action to apply requirements', on_delete=django.db.models.deletion.PROTECT, related_name='requirements', to='rules.Action')),
                ('behavior', models.ForeignKey(help_text='Maybe Action to fulfill requirement', on_delete=django.db.models.deletion.PROTECT, related_name='unfullfilled_requirements', to='rules.Action')),
                ('condition', models.ForeignKey(help_text='Condition related', on_delete=django.db.models.deletion.PROTECT, related_name='requirements', to='rules.Condition')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('is_allowed', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules', to='rules.Action', verbose_name='doing')),
            ],
            options={
                'ordering': ['actor', 'action'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(max_length=36, unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=4096)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('name', models.CharField(default='', help_text='Common name for the trigger', max_length=36)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='triggers', to='rules.Action', verbose_name='When ...')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.CharField(default=ilot.core.manager.AppManager.get_new_uuid, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0, editable=False)),
                ('ref_time', models.BigIntegerField(default=ilot.core.manager.AppManager.get_ref_time, editable=False)),
                ('created_date', models.DateTimeField(default=ilot.core.manager.AppManager.get_valid_time, editable=False, verbose_name='created on')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='modified on')),
                ('reference', models.CharField(choices=[('event', 'Event'), ('actor', 'Actor'), ('target', 'Target'), ('related', 'Item'), ('context', 'Context')], default='origin', max_length=36, verbose_name='')),
                ('replaces', models.BooleanField(default=False, verbose_name='Replaces type')),
                ('name', models.CharField(max_length=96, unique=True, verbose_name='is a')),
                ('scope', models.CharField(choices=[('item', 'Item'), ('children', '+Children'), ('descendants', '+Descendants')], default='item', max_length=96, verbose_name='and applies to ')),
                ('image', models.ImageField(blank=True, null=True, upload_to=ilot.rules.models.upload_to)),
                ('min_count', models.IntegerField(default=1)),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='types', to='ilot.Package', verbose_name='Package')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='types', to='rules.Status', verbose_name='A')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children_types', to='rules.Type', verbose_name='On a')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(ilot.core.models.ModelDiffMixin, models.Model),
        ),
        migrations.AddField(
            model_name='trigger',
            name='actor_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='triggers_as_actor', to='rules.Type', verbose_name='Trigger as ...'),
        ),
        migrations.AddField(
            model_name='trigger',
            name='behavior',
            field=models.ForeignKey(help_text='Action to be triggered', on_delete=django.db.models.deletion.PROTECT, related_name='triggered', to='rules.Action'),
        ),
        migrations.AddField(
            model_name='trigger',
            name='condition',
            field=models.ForeignKey(blank=True, help_text='Condition to be true to do the trigger', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='triggers', to='rules.Condition', verbose_name='if'),
        ),
        migrations.AddField(
            model_name='trigger',
            name='target_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='triggers_as_target', to='rules.Type', verbose_name='Trigger to ...'),
        ),
        migrations.AddField(
            model_name='trigger',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='triggers', to='rules.Type', verbose_name='on '),
        ),
        migrations.AddField(
            model_name='rule',
            name='actor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='actors', to='rules.Type', verbose_name='as a '),
        ),
        migrations.AddField(
            model_name='rule',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rules', to='rules.Type', verbose_name='on a '),
        ),
        migrations.AddField(
            model_name='property',
            name='scope',
            field=models.ForeignKey(blank=True, help_text='Type used to filter descendants events. Ex: calling an initiative, get the AssignedContributions amount total', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='properties', to='rules.Type'),
        ),
        migrations.AddField(
            model_name='condition',
            name='left',
            field=models.ForeignKey(help_text='Left value', on_delete=django.db.models.deletion.PROTECT, related_name='condition_lefts', to='rules.Property'),
        ),
        migrations.AddField(
            model_name='condition',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent condition needed to be true', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conditions', to='rules.Condition'),
        ),
        migrations.AddField(
            model_name='condition',
            name='right',
            field=models.ForeignKey(blank=True, help_text='Right value', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='condition_rights', to='rules.Property'),
        ),
        migrations.AddField(
            model_name='action',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='actions', to='rules.Status'),
        ),
        migrations.AddField(
            model_name='action',
            name='target_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='targets', to='rules.Type', verbose_name='Target must be '),
        ),
    ]
